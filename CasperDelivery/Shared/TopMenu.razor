@using CasperDelivery.Data.Models
@using CasperDelivery.Interfaces
@using CasperDelivery.Services
@using CasperDelivery.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using System.Security.Claims

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavBarService service
@inject SignInManager<AppUser> SignInManager

<nav class="navbar navbar-expand-lg bg-body-tertiary fixed-top">
  <div class="container-fluid me-5 ms-5">
    <a class="navbar-brand" href="/"><img src="images/Logo/casper-delivery-logo.png" height="70" width="110"></a>
    <button class="navbar-toggler btn-outline-dark" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="oi oi-menu"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link active" aria-current="page" href="/">Home</a>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle"  role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Choose restaurant
          </a>
          <ul class="dropdown-menu">
            @if (Restaurant != null)
            {
              @foreach (var item in Restaurant)
              {
                <li>
                  <img src="images/Restaurants/@item.PictureUrl" class="logo-style mx-1 list-item-image mt-1"/>
                  <a class="list-items" href="/restaurants/@item.Id">@item.Name</a>
                </li>
              }
            }
          </ul>
        </li>
        <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="/about">About Us</a>
        </li>
      </ul>
      <LoginDisplay BasketCount="ItemsCount"/>
    </div>
  </div>
</nav>

@code {
    List<Restaurants> Restaurant = new List<Restaurants>();
    Basket Basket = new Basket();
    string UserId;
    int ItemsCount = 0;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        if (user.Identity.IsAuthenticated)
        {
            UserId = user.FindFirstValue(ClaimTypes.NameIdentifier);
        }

        Restaurant = await service.GetAllAsync();
        Basket = await service.GetBasketAsync(UserId);

        if (user.Identity.IsAuthenticated && Basket.Items != null)
        {
            ItemsCount = Basket.Items.Count;
        }
    }
}