@page "/restaurants/{RestaurantId}"
@using CasperDelivery.Interfaces
@inject ICartService cartService
@inject IToastService toastService


@if(Restaurant != null)
{
    <div class="bg-image d-flex justify-content-center align-items-center"
         style="
         background-image: url('images/Restaurantsbackground/@Restaurant.BackgroundUrl');
         height: 40vh;
      ">
        <h1 class="text-white blur-background">@Restaurant.Name</h1>
    </div>

    <div class="container mt-5">
        <div class="row product-lists">
            @foreach (var item in Restaurant.Products)
            {
                <div class="col-lg-4 col-md-6 text-center">
                    <div class="single-product-item">
                        <div class="product-image">
                            <img src="images/Products/@item.PictureUrl" alt="" style="width: 200px; height: 200px; object-fit: cover;" />
                        </div>
                        <h3>@item.Name</h3>
                        <p class="product-price">@String.Format("{0:0.00}", item.Price) $</p>
                        <AuthorizeView>
                            <Authorized>
                                  <button onclick="@(async () => await AddItemToCart(item.Id))" class="cart-btn" id=""><i class="fas fa-shopping-cart"></i> Add to Cart</button>
                            </Authorized>
                            <NotAuthorized>
                                <p>You need to enter your account to add item to cart</p>
                            </NotAuthorized>
                        </AuthorizeView>
                        
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    [Parameter]
    public string RestaurantId { get; set; }

    Restaurants Restaurant;
    protected override async Task OnParametersSetAsync()
    {
        int Id = int.Parse(RestaurantId);
        Restaurant = await cartService.GetRestaurantInfo(Id);
    }

    protected async Task AddItemToCart(int id)
    {
         await cartService.AddItemToCart(id);
        toastService.ShowSuccess("Product added to cart successfully!");
    }
}