@page "/setaddress"
@using CasperDelivery.Interfaces.Repositories
@using System.Security.Claims
@using CasperDelivery.WebModels
@inject AuthenticationStateProvider AuthenticationStateProvider;
@inject IAddressRepository AddressRepository


<AuthorizeView>
    <Authorized Context="authContext">
        <div class="container mt-4">
            <h2 class="text-center add-header">Add Address</h2>
            <div class="row mx-0 justify-content-center">
                <div class="col-md-8 col-lg-6 px-lg-3 col-xl-5 px-xl-0 px-xxl-4">
                    <EditForm Model="@_address" OnValidSubmit="@SaveAddress" class="w-100 rounded-1 p-5 border bg-white">
                        <DataAnnotationsValidator/>
                        <ValidationSummary/>

                        <div class="form-group">
                            <label for="FirstName">First name</label>
                            <InputText id="FirstName" @bind-Value="_address.FirstName" class="form-control"/>
                            <ValidationMessage For="@(() => _address.FirstName)"/>
                        </div>

                        <div class="form-group">
                            <label for="LastName">Last name</label>
                            <InputText id="LastName" @bind-Value="_address.LastName" class="form-control"/>
                            <ValidationMessage For="@(() => _address.LastName)"/>
                        </div>

                        <div class="form-group">
                            <label for="Street">Street</label>
                            <InputText id="Street" @bind-Value="_address.Street" class="form-control"/>
                            <ValidationMessage For="@(() => _address.Street)"/>
                        </div>

                        <div class="form-group">
                            <label for="PhoneNumber">Phone Number</label>
                            <InputText id="PhoneNumber" @bind-Value="_address.PhoneNumber" class="form-control"/>
                            <ValidationMessage For="@(() => _address.PhoneNumber)"/>
                        </div>

                        <div class="mb-3 mt-3">
                            <a href="/cart" class="btn btn-outline-primary px-4 rounded-3">Back</a>
                            <button type="submit" class="btn btn-primary px-4 rounded-3">Save</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="container text-center mt-3">
            <a href="Identity/Account/Login" class="btn btn-dark">Go To Login Page</a>
        </div>
    </NotAuthorized>

</AuthorizeView>

@code {
    AddressModel _address = new AddressModel();
    Address userAddress;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;
        userAddress = await AddressRepository.GetAddressByUserId(user.FindFirstValue(ClaimTypes.NameIdentifier));
    }

    protected async Task SaveAddress()
    {
        userAddress.FirstName = _address.FirstName;
        userAddress.LastName = _address.LastName;
        userAddress.Street = _address.Street;
        userAddress.PhoneNumber = _address.PhoneNumber;
        await AddressRepository.UpdateAsync(userAddress);
    }

}